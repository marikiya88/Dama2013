package com.maria.dama2014.db;

// Generated 17-sep-2013 0:44:35 by Hibernate Tools 3.2.1.GA
import com.maria.dama2014.HibernateSession;
import java.io.Serializable;
import java.lang.reflect.Field;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.hibernate.Session;

/**
 * Proveedor generated by hbm2java
 */
public class Proveedor implements Serializable {

    private int id;
    private String nombre;
    private String direccion;
    private String cp;
    private String localidad;
    private String provincia;
    private String telefono;
    //private String movil;
    private String representante;
    private String telefonoRepresentante;
    private String comentarios;
    private Date fechaAlta;
    private Set modelos = new HashSet(0);

    public String[] getFieldNames() {
        return new String[]{
                    "Id",
                    "Nombre",
                    "Direccion",
                    "CP",
                    "Localidad", 
                    "Provincia",
                    "Telefono",
                    "Nombre Repr.",
                    "Telefono Repr.",
                    "Comentarios",
                    "Fecha de alta"
                };
    }

    public Object[] getFieldValues() {

        Field[] fields = this.getClass().getDeclaredFields();
        Object[] o = new Object[fields.length];

        for (int i = 0; i < fields.length; i++) {
            try {
                o[i] = fields[i].get(this);
            } catch (IllegalArgumentException | IllegalAccessException ex) {
                Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return o;
    }

    public Object[] getFieldValues(String[] names) {

        Field[] fields = this.getClass().getDeclaredFields();
        Object[] o = new Object[fields.length];

        for (int i = 0; i < names.length; i++) {
            try {
                Field f = this.getClass().getField(names[i]);
                o[i] = f.get(this);
            } catch (NoSuchFieldException |IllegalArgumentException | IllegalAccessException ex) {
                Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return o;
    }

    public Proveedor() {
    }

    public Proveedor(int id, String nombre) {
        this.id = id;
        this.nombre = nombre;
    }

    public Proveedor(int id, String nombre, String direccion, String cp, String localidad, String provincia, String telefono, String movil, String representante, String telefonoRepresentante, String comentarios, Date fechaAlta, Set modelos) {
        this.id = id;
        this.nombre = nombre;
        this.direccion = direccion;
        this.cp = cp;
        this.localidad = localidad;
        this.provincia = provincia;
        this.telefono = telefono;
        //this.movil = movil;
        this.representante = representante;
        this.telefonoRepresentante = telefonoRepresentante;
        this.comentarios = comentarios;
        this.fechaAlta = fechaAlta;
        this.modelos = modelos;
    }

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getDireccion() {
        return this.direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public String getCp() {
        return this.cp;
    }

    public void setCp(String cp) {
        this.cp = cp;
    }

    public String getLocalidad() {
        return this.localidad;
    }

    public void setLocalidad(String localidad) {
        this.localidad = localidad;
    }

    public String getProvincia() {
        return this.provincia;
    }

    public void setProvincia(String provincia) {
        this.provincia = provincia;
    }

    public String getTelefono() {
        return this.telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public String getMovil() {
        //return this.movil;
        return "";
    }

    public void setMovil(String movil) {
        //this.movil = movil;
    }

    public String getRepresentante() {
        return this.representante;
    }

    public void setRepresentante(String representante) {
        this.representante = representante;
    }

    public String getTelefonoRepresentante() {
        return this.telefonoRepresentante;
    }

    public void setTelefonoRepresentante(String telefonoRepresentante) {
        this.telefonoRepresentante = telefonoRepresentante;
    }

    public String getComentarios() {
        return this.comentarios;
    }

    public void setComentarios(String comentarios) {
        this.comentarios = comentarios;
    }

    public Date getFechaAlta() {
        return this.fechaAlta;
    }

    public void setFechaAlta(Date fechaAlta) {
        this.fechaAlta = fechaAlta;
    }

    public Set getModelos() {
        return this.modelos;
    }

    public void setModelos(Set modelos) {
        this.modelos = modelos;
    }

    @Override
    public String toString() {
        return "Proveedor{" + "id=" + id + ", nombre=" + nombre + ", direccion=" + direccion + ", cp=" + cp + ", localidad=" + localidad + ", provincia=" + provincia + ", telefono=" + telefono + ", movil=" + "" + ", representante=" + representante + ", telefonoRepresentante=" + telefonoRepresentante + ", comentarios=" + comentarios + ", fechaAlta=" + fechaAlta + ", modelos=" + modelos + '}';
    }

    public void newProveedor() {
        Session session = HibernateSession.getSession();

        System.out.println("Hasta qui cojo la sesion");
        session.beginTransaction();
        System.out.println("Hasta aqui empizo la trnsaccion");

        Serializable nuevoId = session.save(this);
        session.getTransaction().commit();

        System.out.println("He insertado bien con identificador " + nuevoId);
    }

    public List<Proveedor> listProveedores() {
        Session session = HibernateSession.getSession();
        session.beginTransaction();

        List<Proveedor> provs = session.createQuery("from Proveedor").list();

        return provs;
    }
}
